test <- df_Ex3[, 6:7]
test$longitude <- as.numeric(test$longitude, options(digits = 10))
options(digits=2)
y <- as.character("10.123456789")
as.numeric(y)
options(digits=5)
> y <- as.character("10.123456789")
> as.numeric(y)
options(digits=5)
y <- as.character("10.123456789")
as.numeric(y)
test <- df_Ex3[, 6:7]
test[1,1]
options(digits = 10)
as.numeric(test[1,1])
test[1,1] <- as.numeric(test[1,1])
View(test)
library(readr)
parse_number(test$longitude[1,1])
parse_number(test$longitude)
test$longitude <- parse_number(test$longitude)
options(digits = 1)  # these options just refer to printing - not to the object itself in the environment
options(digits = 2)  # these options just refer to printing - not to the object itself in the environment
test <- df_Ex3[, 6:7]
test$longitude <- parse_number(test$longitude, digits = 10)
test <- df_Ex3[, 6:7]
test$longitude <- as.numeric(paste(test$longitude))
f <- char(sample(runif(5), 20, replace = TRUE))
f <- character(sample(runif(5), 20, replace = TRUE))
f <- factor(sample(runif(5), 20, replace = TRUE))
test <- df_Ex3[, 6:7]
test[1, 1] <- lapply(as.double(test$longitude), round, 100)
test[ ,1] <- lapply(as.double(test$longitude), round, 100)  # (size 20) to size 1
fix <- lapply(as.double(test$longitude), round, 100)
View(fix)
test <- df_Ex3[, 6:7]
fix <- lapply(as.double(test$longitude), round, 100)
test <- df_Ex3[, 6:7]
test <- df_Ex3[, 6:7]
test$longitude <- parse_number(test$longitude, digits = 10)
test$longitude <- parse_number(test$longitude)
test <- df_Ex3[, 6:7]
test$longitude <- as.numeric(test$longitude, options(digits = 10))
test <- df_Ex3[, 6:7]
test$longitude <- as.numeric(paste(test$longitude))  # still rounding
test <- df_Ex3[, 6:7]
test[ , 1] <- lapply(as.double(unlist(test$longitude)), round, 100)
test[ , 1] <- lapply(unlist(test$longitude), as.double)
test[ , 1] <- as.double(unlist(df_Ex3[ , 1]), length = 10)
test <- df_Ex3[, 6:7]
test[ , 1] <- as.double(unlist(df_Ex3[ , 1]))
test <- df_Ex3[, 6:7]
test[ , 1] <- as.double(unlist(test[ , 1]))
y <- as.numeric(y)
test <- df_Ex3[, 6:7]
test[1,1]
as.numeric(test[1,1])
test[1,1] <- as.numeric(test[1,1])
test[1,1] <- as.numeric(as.character(test[1,1]))
n = 20
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = numeric(n),  # is.double anpassen
latitude = numeric(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(as.numeric(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]))
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
return(df)
}
View(df_Ex3)
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(as.numeric(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]))
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(as.numeric(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]))
}
}
return(df)
}
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
return(df)
}
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
test <- df_Ex3[, 6:7]
# Using different explicit rounding
test[ , 1] <- as.numeric(round(test[1,1], digits = 10))
test[ , 1] <- round(as.numeric(test[1,1]),
digits = 10)
test <- df_Ex3[, 6:7]
test[1, 1] <- round(as.numeric(test[1,1]),
digits = 10)
# Using different explicit rounding
fix <- round(as.numeric(test[1,1]),
digits = 10)  # can't convert <double> to <character>.
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = numeric(n),  # is.double anpassen
latitude = numeric(n))
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = numeric(n),  # is.double anpassen
latitude = numeric(n))
for (i in 1:n) {
df_Ex3[i, 1] <- as.tibble(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df_Ex3[i, 2] <- as.tibble(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df_Ex3[i, 3] <- as.tibble(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df_Ex3[i, 4] <- as.tibble(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df_Ex3[i, 5] <- as.tibble(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
# Longitude
if (is.character(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df_Ex3[i, 6] <- NA
}
else {
df_Ex3[i, 6] <- as.tibble(
round(as.numeric(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
),
digits = 10)
}
# Latitude
if (is.character(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df_Ex3[i, 7] <- NA
}
else {
df_Ex3[i, 7] <- as.tibble(
round(as.numeric(Ex3_cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
),
digits = 10)
}
}
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = numeric(n),  # is.double anpassen
latitude = numeric(n))
test <- df_Ex3[, 6:7]
test[1,1] <- as.character("123.5678")
test[1,1]  <- round(as.numeric(test[1,1]),
digits = 10)
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3 <- df_Ex3 %>% mutate(longitude = as.numeric(longitude), latitude = as.numeric(latitude))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3 <- df_Ex3 %>% round(mutate(longitude = as.numeric(longitude), latitude = as.numeric(latitude)),
digits = 10)
df_Ex3 <- df_Ex3 %>% round(mutate(latitude = as.numeric(latitude)),
digits = 10)
options(digits = 10)
df_Ex3 <- df_Ex3 %>% mutate(longitude = as.numeric(longitude), latitude = as.numeric(latitude))
df_Ex3$longitude
df_Ex3$latitude
options(digits = 10)  # these options just refer to printing - not to the object itself in the environment
n = 20
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
test <- df_Ex3[, 6:7]
test$longitude <- parse_number(test$longitude)
test$longitude
options(digits = 10)
test <- df_Ex3[, 6:7]
test$longitude <- as.numeric(test$longitude)  # Problem: Rounding
test$longitude
test <- df_Ex3[, 6:7]
test$longitude <- as.numeric(test$longitude, test$latitude)  # Problem: Rounding
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
df %>% mutate(longitude = as.numeric(longitude), latitude = as.numeric(latitude))
return(df)
}
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
df[i, 6] %>% mutate(longitude = as.numeric(longitude))
return(df)
}
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
df[i, 6] %>% mutate(longitude = as.numeric(longitude))
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
return(df)
}
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
df[i, 6] <- as.numeric(df[i, 6])
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
return(df)
}
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
df[i, 6] <- as.numeric(df[i, 6])
}
return(df)
}
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = numeric(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
n = 20
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
return(df)
}
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3 <- df_Ex3 %>% mutate(longitude = as.numeric(longitude), latitude = as.numeric(latitude))
df_Ex3[1,6]
n = 20
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3$longitude <- as.numeric(df_Ex3$longitude)
df_Ex3[1,6]
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
n = 20
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
df_Ex3$longitude <- round(as.numeric(df_Ex3$longitude), digits = 10)
df_Ex3[1,6]
n = 20
df_Ex3 <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
adress = character(n),
url = character(n),
longitude = character(n),  # is.double anpassen
latitude = character(n))
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
df[i, 1] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])  # ith row, first col
df[i, 2] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]])
df[i, 3] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
df[i, 4] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][["line1"]])
df[i, 5] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
}
# Latitude
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as.tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
return(df)
}
df_Ex3 <- fill_dataframe(Ex3_cont_obj, df_Ex3)
test <- df_Ex3[, 6:7]
test$longitude <- parse_number(test$longitude)
test$latitude
df_Ex3$longitude <- parse_number(df_Ex3$longitude)
df_Ex3$longitude
df_Ex3$latitude <- parse_number(df_Ex3$latitude)
df_Ex3$latitude
