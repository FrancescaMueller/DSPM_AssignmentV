latitude = character(m))
df_page30 <- all_info_one_country(df_Ex4, dummy_df, country, 30)
View(df_page30)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
df_page40 <- all_info_one_country(df_Ex4, dummy_df, country, 40)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
df_page50 <- all_info_one_country(df_Ex4, dummy_df, country, 50)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
pages <- floor(m/n)  # 611 pages
# Controlling for possible remainder
remainder <- m - pages*n  # 18
last_page <- ceiling(m/n)  # 612
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 5/60)  # max. 5 per second
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
df_page100 <- all_info_one_country(df_Ex4, dummy_df, country, 100)
View(df_page50)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
remove(df_page50)
df_page50 <- all_info_one_country(df_Ex4, dummy_df, country, 50)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 8/60)  # max. 5 per second, angepasst da abbruch
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
df_page100 <- all_info_one_country(df_Ex4, dummy_df, country, 100)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
df_page50 <- all_info_one_country(df_Ex4, dummy_df, country, 50)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
df_page100 <- all_info_one_country(df_Ex4, dummy_df, country, 100)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
View(df_Ex4)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 10/60)  # max. 5 per second, angepasst da abbruch
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
system.time(
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
)
m = as.numeric(Ex3_cont_obj[["page"]][["totalElements"]])
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
system.time(
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
)
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 15/60)  # max. 5 per second, angepasst da abbruch
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
system.time(
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
)
View(df_Ex4)
system.time(
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
)
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 0.2)  # max. 5 per second, angepasst da abbruch
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
system.time(
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
)
15/60
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 15/60)  # max. 5 per second, angepasst da abbruch
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
df_page100 <- all_info_one_country(df_Ex4, dummy_df, country, 100)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
df_page30 <- all_info_one_country(df_Ex4, dummy_df, country, 30)
df_page40 <- all_info_one_country(df_Ex4, dummy_df, country, 40)
df_page50 <- all_info_one_country(df_Ex4, dummy_df, country, 50)
View(df_page50)
remove(df_page50)
df_page50 <- all_info_one_country(df_Ex4, dummy_df, country, 50)
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
df_page100 <- all_info_one_country(df_Ex4, dummy_df, country, 100)
View(df_Ex4)
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 0.5)  # max. 5 per second, angepasst da abbruch
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
system.time(
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
)
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 2)  # max. 5 per second, angepasst da abbruch
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
system.time(
df_Ex4 <- all_info_one_country(df_Ex4, dummy_df, country, pages)
)
system.time(
df_page300 <- all_info_one_country(df_Ex4, dummy_df, country, 300)
)
system.time(
df_page610 <- all_info_one_country(df_Ex4, dummy_df, country, 610)
)
cont_obj_0[["_embedded"]][["venues"]][[i]][["name"]][[1]]
cont_obj_0[["_embedded"]][["venues"]][[1]][["name"]][[1]]
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
# Problematic: error prone api -> throwing error regarind size 0 to 1
# Try workaround
if (is.null(cont_obj[["_embedded"]][["venues"]][[i]][["name"]]) == TRUE) {
df[i, 1] <- NA
} else {
df[i, 1] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]][[1]])
}
# df[i, 1] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])
df[i, 2] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]]) ## ggf anpassen
df[i, 3] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
# df[i, 4] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][[1]])  # adapted
# Special case adress: not always mentioned
if (is.null(cont_obj[["_embedded"]][["venues"]][[i]][["address"]]) == TRUE) {
df[i, 4] <- NA
} else {
df[i, 4] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][[1]])
}
df[i, 5] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
}
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
return(df)
}
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 2)  # max. 5 per second, angepasst da abbruch
}
# Note: Last page
# cont_obj_last_page <- get_content(country, page = last_page)
return(df)
}
remove(df_Ex4_small)
df_Ex4_small <- all_info_one_country(df_Ex4, dummy_df, country, 3)
View(df_Ex4_small)
system.time(
df_page300 <- all_info_one_country(df_Ex4, dummy_df, country, 300)
)
fill_dataframe <- function(cont_obj, df) {
for (i in 1:n) {
# Problematic: error prone api -> throwing error regarind size 0 to 1
# Try workaround
if (is.null(cont_obj[["_embedded"]][["venues"]][[i]][["name"]]) == TRUE) {
df[i, 1] <- NA
} else {
df[i, 1] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]][[1]])
}
# df[i, 1] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["name"]])
# Workaround
if (is.null(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]]) == TRUE) {
df[i, 2] <- NA
} else {
df[i, 2] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]][[1]])
}
# df[i, 2] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["city"]][["name"]]) ## ggf anpassen
df[i, 3] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["postalCode"]])
# df[i, 4] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][[1]])  # adapted
# Special case adress: not always mentioned
if (is.null(cont_obj[["_embedded"]][["venues"]][[i]][["address"]]) == TRUE) {
df[i, 4] <- NA
} else {
df[i, 4] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["address"]][[1]])
}
df[i, 5] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["url"]])
# Location variable (long/lat)
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]]) == FALSE) {
df[i, 6] <- NA
} else {
df[i, 6] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["longitude"]])
}
if (is.character(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]]) == FALSE) {
df[i, 7] <- NA
} else {
df[i, 7] <- as_tibble(cont_obj[["_embedded"]][["venues"]][[i]][["location"]][["latitude"]])
}
}
return(df)
}
df_Ex4 <- tibble(name = character(m),
city = character(m),
postalCode = character(m),
address = character(m),
url = character(m),
longitude = character(m),
latitude = character(m))
dummy_df <- tibble(name = character(n),
city = character(n),
postalCode = character(n),
address = character(n),
url = character(n),
longitude = character(n),
latitude = character(n))
all_info_one_country <- function(df, dummy_df, country, pages) {
# First page different
cont_obj_0 <- get_content(country, page = 0)
df[1:20, ] <- fill_dataframe(cont_obj_0, df = dummy_df)
# Further pages
for (j in 1:pages) {
cont_obj <- get_content(country, j)
df[(20 + 20*j - 19):(20 + 20*j), ] <- fill_dataframe(cont_obj = cont_obj, df = dummy_df)
Sys.sleep(time = 2)  # max. 5 per second, angepasst da abbruch
}
system.time(
df_page300 <- all_info_one_country(df_Ex4, dummy_df, country, 300)
)
1
1
